@echo off
set UP=%1
call :toUpper UP
set low=%1
call :toLower low

set Tools=..\..\..\tools
set Arkos=%Tools%\audio\arkos

if not exist out md out

rem Assemble
%Arkos%\rasm_win64.exe profile_%low%.asm -o out\%low%_player -s -sl -sq

rem Diassemble
%Arkos%\Disark.exe out\%low%_player.bin out\%low%_player.asm --symbolFile out\%low%_player.sym --undocumentedOpcodesToBytes --src16bitsValuesInHex --src8bitsValuesInHex --sourceProfile sdcc

rem Create C file
echo // Autogenerated Arkos %UP% player for MSX-GL library > %low%_player.c
echo // On %DATE% et %TIME%    >> %low%_player.c
echo #include "%low%_player.h" >> %low%_player.c
echo void %UP%_Dummy()         >> %low%_player.c
echo {                         >> %low%_player.c
echo __asm                     >> %low%_player.c
type out\%low%_player.asm      >> %low%_player.c
echo __endasm;                 >> %low%_player.c
echo }                         >> %low%_player.c

rem Some formating to make the source file more readable
%Arkos%\fart.exe -C %low%_player.c ": " ":\n\t"
%Arkos%\fart.exe -C %low%_player.c ","  ", "

rem Add C function headers
%Arkos%\fart.exe -C %low%_player.c "_PLY_%UP%_INIT::" "__endasm;\n}\n\n\x2F\x2F Initialize a music\nvoid %UP%_Init(const void* data, u16 sng)\n{\n__asm\n\tld a, e ; convert C parameter"
%Arkos%\fart.exe -C %low%_player.c "_PLY_%UP%_STOP::" "__endasm;\n}\n\n\x2F\x2F Stop the music    \nvoid %UP%_Stop()\n{\n__asm"
%Arkos%\fart.exe -C %low%_player.c "_PLY_%UP%_PLAY::" "__endasm;\n}\n\n\x2F\x2F Play a music frame\nvoid %UP%_Decode()\n{\n__asm"

%Arkos%\fart.exe -C %low%_player.c "_PLY_%UP%_INITSOUNDEFFECTS::"           "__endasm;\n}\n\n\x2F\x2F Initialize SFX\nvoid %UP%_SFX_Init()\n{\n__asm"
%Arkos%\fart.exe -C %low%_player.c "_PLY_%UP%_PLAYSOUNDEFFECT::"            "__endasm;\n}\n\n\x2F\x2F Play SFX      \nvoid %UP%_SFX_Play()\n{\n__asm"
%Arkos%\fart.exe -C %low%_player.c "_PLY_%UP%_STOPSOUNDEFFECTFROMCHANNEL::" "__endasm;\n}\n\n\x2F\x2F Stop SFX      \nvoid %UP%_SFX_Stop()\n{\n__asm"


exit /b 0


rem ***************************************************************************
rem  HELPER FUNCTIONS
rem ***************************************************************************

:toLower str -- converts uppercase character to lowercase
::           -- str [in,out] - valref of string variable to be converted
:$created 20060101 :$changed 20080219 :$categories StringManipulation
:$source https://www.dostips.com
if not defined %~1 exit /b
for %%a in ("A=a" "B=b" "C=c" "D=d" "E=e" "F=f" "G=g" "H=h" "I=i"
            "J=j" "K=k" "L=l" "M=m" "N=n" "O=o" "P=p" "Q=q" "R=r"
            "S=s" "T=t" "U=u" "V=v" "W=w" "X=x" "Y=y" "Z=z") do (
    call set %~1=%%%~1:%%~a%%
)
exit /b

:toUpper str -- converts lowercase character to uppercase
::           -- str [in,out] - valref of string variable to be converted
:$created 20060101 :$changed 20080219 :$categories StringManipulation
:$source https://www.dostips.com
if not defined %~1 exit /b
for %%a in ("a=A" "b=B" "c=C" "d=D" "e=E" "f=F" "g=G" "h=H" "i=I"
            "j=J" "k=K" "l=L" "m=M" "n=N" "o=O" "p=P" "q=Q" "r=R"
            "s=S" "t=T" "u=U" "v=V" "w=W" "x=X" "y=Y" "z=Z") do (
    call set %~1=%%%~1:%%~a%%
)
exit /b